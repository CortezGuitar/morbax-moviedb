{"version":3,"sources":["services/TmdService.js","services/TmdServiceContext.js","services/index.js","components/hoc/index.js","components/hoc/withTmdService.js","store/actions.js","components/utils/genres.js","components/Form/Form.js","components/Form/index.js","components/Header/index.js","components/Header/Header.js","components/MovieCard/index.js","components/MovieCard/MovieCard.js","components/Pagination/index.js","components/Pagination/Pagination.js","components/MovieList/MovieList.js","components/MovieList/index.js","components/Footer/index.js","components/Footer/Footer.js","components/App/index.js","components/App/App.js","store/reducer.js","store/store.js","index.js"],"names":["TmdService","getMovie","_callee","formData","page","values","genreIds","resp","regenerator_default","a","wrap","_context","prev","next","genres","map","genre","id","join","_this","getResource","sent","abrupt","stop","params","axios","get","concat","_apiBase","_apiKey","sort_by","sortBy","primary_release_date.gte","releaseDateGte","primary_release_date.lte","releaseDateLte","vote_count.gte","voteCountGte","with_genres","include_adult","includeAdult","data","React","createContext","TmdServiceProvider","Provider","TmdServiceConsumer","Consumer","withTmdService","WrappedComponent","_ref","props","Object","esm_extends","react_default","createElement","tmdService","assign","fetchMovie","dispatch","type","then","payload","catch","error","movieError","name","Form","onSubmitHandler","renderMultiselect","input","valueField","textField","lib","onBlur","value","containerClassName","_this2","this","_this$props","handleSubmit","pristine","reset","submitting","onSubmit","className","htmlFor","Field","component","placeholder","disabled","onClick","Component","connect","state","form","movie","_ref2","bindActionCreators","reduxForm","Header","style","height","document","location","reload","components_Form","MovieCard","currentGenres","poster_path","original_title","genre_ids","release_date","overview","_useState","useState","_useState2","slicedToArray","display","setOverview","src","alt","filter","g","includes","slice","Pagination","getPage","perPage","aria-label","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","handlePageClick","initialPage","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","MovieList","onPageChangeHandler","movies","_this$props$movies","results","total_pages","react","components_Pagination","res","components_MovieCard","key","Footer","App","components_Header","components_MovieList","components_Footer","reducer","arguments","length","undefined","action","objectSpread","loading","rootReducer","combineReducers","apiReducer","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.a2f02880.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// const stri =\r\n//   '&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=2000&primary_release_date.lte=2005&vote_count.gte=100&with_genres=10';\r\n\r\nexport default class TmdService {\r\n  static _apiBase = `https://api.themoviedb.org/3/discover/movie`;\r\n  static _apiKey = `5874acfd11651a28c55771624f7021f4`;\r\n\r\n  async getResource(params, genreIds = '', page) {\r\n    try {\r\n      const resp = await axios.get(\r\n        `${TmdService._apiBase}?api_key=${TmdService._apiKey}&language=en-US`,\r\n        {\r\n          params: {\r\n            sort_by: params.sortBy,\r\n            'primary_release_date.gte': params.releaseDateGte,\r\n            'primary_release_date.lte': params.releaseDateLte,\r\n            'vote_count.gte': params.voteCountGte,\r\n            with_genres: genreIds,\r\n            page: page,\r\n            include_adult: params.includeAdult\r\n          }\r\n        }\r\n      );\r\n      return resp.data;\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  }\r\n\r\n  getMovie = async (formData, page) => {\r\n    const { values } = formData;\r\n    let genreIds = '';\r\n\r\n    if (values.genres) genreIds = values.genres.map(genre => genre.id).join();\r\n\r\n    const resp = await this.getResource(values, genreIds, page);\r\n    return resp;\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: TmdServiceProvider,\r\n  Consumer: TmdServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { TmdServiceProvider, TmdServiceConsumer };\r\n","import TmdService from './TmdService';\r\nimport { TmdServiceConsumer, TmdServiceProvider } from './TmdServiceContext';\r\n\r\nexport default TmdService;\r\nexport { TmdServiceConsumer, TmdServiceProvider };\r\n","import withTmdService from './withTmdService';\r\n\r\nexport default withTmdService;\r\n","import React from 'react';\r\nimport { TmdServiceConsumer } from '../../services';\r\n\r\nexport default WrappedComponent => {\r\n  const withTmdService = ({ ...props }) => {\r\n    return (\r\n      <TmdServiceConsumer>\r\n        {tmdService => {\r\n          return <WrappedComponent {...props} tmdService={tmdService} />;\r\n        }}\r\n      </TmdServiceConsumer>\r\n    );\r\n  };\r\n\r\n  return withTmdService;\r\n};\r\n","const movieRequested = () => {\r\n  return {\r\n    type: 'FETCH_MOVIE_REQUEST'\r\n  };\r\n};\r\n\r\nconst movieLoaded = movie => {\r\n  return {\r\n    type: 'FETCH_MOVIE_SUCCESS',\r\n    payload: movie\r\n  };\r\n};\r\n\r\nconst movieError = error => {\r\n  return {\r\n    type: 'FETCH_MOVIE_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst fetchMovie = tmdService => (formData, page) => dispatch => {\r\n  dispatch(movieRequested());\r\n  tmdService\r\n    .getMovie(formData, page)\r\n    .then(data => dispatch(movieLoaded(data)))\r\n    .catch(error => dispatch(movieError(error)));\r\n};\r\n\r\nexport { fetchMovie };\r\n","const genres = [\r\n  {\r\n    id: 28,\r\n    name: 'Action'\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Adventure'\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'Animation'\r\n  },\r\n  {\r\n    id: 35,\r\n    name: 'Comedy'\r\n  },\r\n  {\r\n    id: 80,\r\n    name: 'Crime'\r\n  },\r\n  {\r\n    id: 99,\r\n    name: 'Documentary'\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'Drama'\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: 'Family'\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Fantasy'\r\n  },\r\n  {\r\n    id: 36,\r\n    name: 'History'\r\n  },\r\n  {\r\n    id: 27,\r\n    name: 'Horror'\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: 'Music'\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: 'Mystery'\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: 'Romance'\r\n  },\r\n  {\r\n    id: 878,\r\n    name: 'Science Fiction'\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: 'TV Movie'\r\n  },\r\n  {\r\n    id: 53,\r\n    name: 'Thriller'\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: 'War'\r\n  },\r\n  {\r\n    id: 37,\r\n    name: 'Western'\r\n  }\r\n];\r\n\r\nexport { genres };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Multiselect } from 'react-widgets';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport './Form.css';\r\n\r\nimport withTmdService from '../hoc';\r\nimport { fetchMovie } from '../../store/actions';\r\nimport { genres } from '../utils/genres';\r\n\r\nclass Form extends Component {\r\n  onSubmitHandler = () => {\r\n    this.props.fetchMovie(this.props.formData);\r\n  };\r\n\r\n  renderMultiselect = ({ input, data, valueField, textField }) => (\r\n    <Multiselect\r\n      {...input}\r\n      onBlur={() => input.onBlur()}\r\n      value={input.value || []}\r\n      data={data}\r\n      valueField={valueField}\r\n      textField={textField}\r\n      containerClassName=\"align-middle\"\r\n    />\r\n  );\r\n\r\n  render() {\r\n    const { handleSubmit, pristine, reset, submitting } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(() => this.onSubmitHandler())}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-10\">\r\n            <label htmlFor=\"sortBy\">Sort By:</label>\r\n            <Field\r\n              name=\"sortBy\"\r\n              component=\"select\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"sortBy\"\r\n            >\r\n              <option />\r\n              <option value=\"popularity.desc\">Popularity</option>\r\n              <option value=\"release_date.desc\">Release Date Descending</option>\r\n              <option value=\"release_date.asc\">Release Date Ascending</option>\r\n              <option value=\"vote_average.desc\">Vote Average</option>\r\n            </Field>\r\n          </div>\r\n          <div className=\"form-check col-2 d-inline-block ml-auto\">\r\n            <Field\r\n              name=\"includeAdult\"\r\n              id=\"includeAdult\"\r\n              component=\"input\"\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n            />\r\n            <label htmlFor=\"includeAdult\" className=\"form-check-label\">\r\n              Include Adult\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"releaseDateGte\">Release Date (Greater Than)</label>\r\n            <Field\r\n              name=\"releaseDateGte\"\r\n              component=\"input\"\r\n              type=\"number\"\r\n              placeholder=\"type year ex. '2010' \"\r\n              className=\"form-control form-control-lg\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"releaseDateLte\">Release Date (Less Than)</label>\r\n            <Field\r\n              name=\"releaseDateLte\"\r\n              component=\"input\"\r\n              type=\"number\"\r\n              placeholder=\"type year ex. '2000' \"\r\n              className=\"form-control form-control-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Genres:</label>\r\n            <Field\r\n              name=\"genres\"\r\n              component={this.renderMultiselect}\r\n              data={genres}\r\n              valueField=\"id\"\r\n              textField=\"name\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6 \">\r\n            <label htmlFor=\"voteCount\">Vote Count (Greater Than)</label>\r\n            <Field\r\n              name=\"voteCountGte\"\r\n              component=\"select\"\r\n              className=\"form-control form-control-lg\"\r\n            >\r\n              <option />\r\n              <option value=\"100\">100</option>\r\n              <option value=\"1000\">1000</option>\r\n            </Field>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group justify-content-end row mr-1\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={pristine || submitting}\r\n            className=\"btn btn-info btn-lg my-0\"\r\n          >\r\n            Search\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            disabled={pristine || submitting}\r\n            onClick={reset}\r\n            className=\"btn btn-secondary btn-lg\"\r\n          >\r\n            Clear Inputs\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { tmdService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchMovie: fetchMovie(tmdService)\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    form: { movie }\r\n  } = state;\r\n\r\n  return {\r\n    formData: movie\r\n  };\r\n};\r\n\r\nForm = withTmdService(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Form)\r\n);\r\n\r\nexport default reduxForm({ form: 'movie' })(Form);\r\n","import Form from './Form';\r\n\r\nexport default Form;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nimport Form from '../Form';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row p-2\">\r\n        <div className=\"col-lg-3\">\r\n          <button\r\n            className=\"btn btn-lg btn-info\"\r\n            style={{ height: '100%' }}\r\n            onClick={() => document.location.reload()}\r\n          >\r\n            Morbax-MovieDB\r\n          </button>\r\n        </div>\r\n        <div className=\"col-lg-9 pt-3\">\r\n          <Form />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import MovieCard from './MovieCard';\r\n\r\nexport default MovieCard;\r\n","import React, { useState } from 'react';\r\nimport { genres } from '../utils/genres';\r\n\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({\r\n  poster_path,\r\n  original_title,\r\n  genre_ids,\r\n  release_date,\r\n  overview\r\n}) => {\r\n  const [display, setOverview] = useState('none');\r\n\r\n  const displayGenres = (currentGenres, allGenres) => {\r\n    const filteredArr = allGenres.filter(g => currentGenres.includes(g.id));\r\n\r\n    return filteredArr.map(g => g.name).join(', ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mx-auto my-2 moviecard\" style={{}}>\r\n      {poster_path && (\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n          alt=\"movie\"\r\n        />\r\n      )}\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">{original_title}</h4>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">\r\n          {displayGenres(genre_ids, genres)}\r\n        </h6>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">\r\n          {release_date.slice(0, 4)}\r\n        </h6>\r\n        <p className=\"card-text\" style={{ display: display }}>\r\n          {overview}\r\n        </p>\r\n        <button\r\n          className=\"btn btn-outline-info\"\r\n          onClick={() => {\r\n            if (display === 'none') {\r\n              setOverview('block');\r\n            } else {\r\n              setOverview('none');\r\n            }\r\n          }}\r\n        >\r\n          Overview\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import Pagination from './Pagination';\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport './Pagination.css';\r\n\r\nconst Pagination = ({ getPage, perPage }) => {\r\n  const handlePageClick = page => {\r\n    getPage(page.selected + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <nav\r\n        aria-label=\"Page navigation\"\r\n        className=\"d-flex justify-content-center mt-2 nav-container border-bottom border-info\"\r\n      >\r\n        <ReactPaginate\r\n          previousLabel={'<<'}\r\n          nextLabel={'>>'}\r\n          breakLabel={'..'}\r\n          breakClassName=\"page-item page-link\"\r\n          pageCount={perPage}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={2}\r\n          onPageChange={page => handlePageClick(page)}\r\n          initialPage={0}\r\n          containerClassName=\"pagination\"\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          activeClassName=\"page-item active\"\r\n          activeLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          nextClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextLinkClassName=\"page-link\"\r\n          disabledClassName=\"page-item disabled\"\r\n        />\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nimport MovieCard from '../MovieCard';\r\nimport Pagination from '../Pagination';\r\nimport withTmdService from '../hoc';\r\nimport { fetchMovie } from '../../store/actions';\r\n\r\nclass MovieList extends Component {\r\n  onPageChangeHandler = page => {\r\n    const { fetchMovie, formData } = this.props;\r\n    fetchMovie(formData, page);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.movies) {\r\n      const { results, total_pages } = this.props.movies;\r\n      return (\r\n        <Fragment>\r\n          <Pagination\r\n            perPage={total_pages}\r\n            getPage={this.onPageChangeHandler}\r\n          />\r\n          <div className=\"d-flex justify-content-between flex-wrap row\">\r\n            {results.map(res => (\r\n              <MovieCard {...res} key={res.id} />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    movies: { movies },\r\n    form: { movie }\r\n  } = state;\r\n  return {\r\n    movies,\r\n    formData: movie\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { tmdService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchMovie: fetchMovie(tmdService)\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nMovieList = withTmdService(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MovieList)\r\n);\r\n\r\nexport default reduxForm({ form: 'movie' })(MovieList);\r\n","import MovieList from './MovieList';\r\n\r\nexport default MovieList;\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-12 border-top border-info text-center py-3\">\r\n        <span>&copy; 2019 Anton Senderkin</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Header from '../Header';\nimport MovieList from '../MovieList';\nimport Footer from '../Footer';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App container border\">\n        <Header />\n        <MovieList />\n        <Footer />\n      </div>\n    );\n  }\n}\n","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_MOVIE_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case 'FETCH_MOVIE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'FETCH_MOVIE_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport apiReducer from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: apiReducer,\r\n  form: formReducer\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App/';\nimport TmdService from './services';\nimport { TmdServiceProvider } from './services';\nimport store from './store/store';\n\nconst tmdService = new TmdService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <TmdServiceProvider value={tmdService}>\n      <App />\n    </TmdServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}